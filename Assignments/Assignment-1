-----3bit by 3bit multiplier using gate level------

CODE:
module multiplier3by3(A, B, p);

    input [2:0] A;    
    input [2:0] B;   
    output [5:0] p;   

    wire [2:0] w1, w2, w3;   
    wire [3:0] S; 
               
    and g0 (p[0], A[0], B[0]);            
    and g1 (w1[0], A[1], B[0]);           
    and g2 (w1[1], A[2], B[0]);           
    assign w1[2] = 1'b0;                  

    and g3 (w2[0], A[0], B[1]);          
    and g4 (w2[1], A[1], B[1]);           
    and g5 (w2[2], A[2], B[1]);           

    // First 3-bit addition
    threebitAdder g6 (S, w1, w2);         
    assign p[1] = S[0];                   

    and g7 (w3[0], A[0], B[2]);          
    and g8 (w3[1], A[1], B[2]);           
    and g9 (w3[2], A[2], B[2]);           

    // Second 3-bit addition
    threebitAdder g10 (p[5:2], S[3:1], w3);  // p[5:2] = S[3:1] + w3
endmodule

//threebitAdder module
module threebitAdder(
    input [2:0] A,        
    input [2:0] B,        
    input Cin,            
    output [2:0] Sum,     
    output Cout           
);
    wire C1, C2;          

    // First bit 
    full_adder fa0 (
        .A(A[0]),
        .B(B[0]),
        .Cin(Cin),
        .Sum(Sum[0]),
        .Cout(C1)
    );

    // Second bit 
    full_adder fa1 (
        .A(A[1]),
        .B(B[1]),
        .Cin(C1),
        .Sum(Sum[1]),
        .Cout(C2)
    );

    // Third bit
    full_adder fa2 (
        .A(A[2]),
        .B(B[2]),
        .Cin(C2),
        .Sum(Sum[2]),
        .Cout(Cout)
    );
endmodule

// the full_adder module
module full_adder(A,B,Cin,Sum,Cout);
    input A,B,Cin;
    output Sum,Cout;
    
    wire n1,n2,n3;
    
    xor x1(n1,A,B);
    and a1(n2,A,B);
    xor x2(Sum,n1,Cin);
    and a2(n3,n1,Cin);
    or o1(Cout,n2,n3);
endmodule
